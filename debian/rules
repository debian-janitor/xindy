#!/usr/bin/make -f
# -*- makefile -*-

include /usr/share/dpatch/dpatch.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS += -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

export CLISP_DIR = $(shell dirname $$(readlink --canonicalize /usr/bin/clisp-link))
export CLISP_LINKKIT = $(CLISP_DIR)/linkkit

configure_flags = LDFLAGS="$(LDFLAGS) -Wl,-z,defs" CFLAGS="$(CFLAGS)" \
  --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr \
  --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info \
  --enable-external-clisp --enable-clisp-dir=$(CLISP_DIR)

arch_subdirs=rte binaries tex2xindy user-commands
indep_subdirs=modules make-rules doc

pre-config-stamp: configure patch-stamp
	dh_testdir
	for k in sub guess; do \
	    test -r /usr/share/misc/config.$$k || continue; \
	    if ! test -L config.$$k; then \
	        mv config.$$k config.$$k.upstream; \
	        ln -s /usr/share/misc/config.$$k config.$$k; \
	    fi; \
	done

	touch $@

config.status: pre-config-stamp
	./configure $(configure_flags) --disable-make-rules --disable-docs

config.status-with-latex: pre-config-stamp
	if [ -e config.status ]; then \
	    rm -f build-arch-stamp build-indep-stamp; \
	    $(MAKE) distclean || true; \
	fi
	./configure $(configure_flags)

	ln config.status config.status-with-latex

#build: build-indep build-arch
build:

build-indep: build-indep-stamp
build-indep-stamp: config.status-with-latex
	dh_testdir

	for i in $(indep_subdirs); do $(MAKE) -C $$i all || exit 1; done

	# Rebuild the manual pages to fix the hyphen vs. dash problem
	mv tex2xindy/tex2xindy.1 tex2xindy/tex2xindy.1.upstream
	pod2man tex2xindy/tex2xindy.l > tex2xindy/tex2xindy.1
	for i in texindy xindy.in; do \
	    man_file=user-commands/$${i%.in}.1; \
	    mv $$man_file $$man_file.upstream; \
	    pod2man user-commands/$$i > $$man_file; \
	done

	touch $@

cl_src = $(CURDIR)/clisp-link-src

build-arch: build-arch-stamp
build-arch-stamp:  config.status
	dh_testdir

	rm -fr $(cl_src)
	cp -Lr $(CLISP_DIR)/full $(cl_src)
	sed -i '/^LIBS/!n; s/-ldb /-ldb-4.6 /; s/-l\(SM\|ICE\) //g' \
	  $(cl_src)/makevars

	rm -fr rte/xindy-build-dir
	$(MAKE) -C rte/ordrules CLISP=/usr/bin/clisp ordrulei.c
	sed -i '/register_foreign_inttype("\(tcflag\|speed\|cc\|__ipc_pid\|ptrdiff\)_t"/d' \
	  rte/ordrules/ordrulei.c
	cd rte && clisp-link add-module-set ordrules $(cl_src) xindy-build-dir
	cp rte/xindy-build-dir/lisp.run binaries/xindy.run
	cp rte/xindy-build-dir/lispinit.mem binaries/base.mem

	for i in $(arch_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

clean:
	dh_testdir
	rm -f build-arch-stamp build-indep-stamp pre-config-stamp \
	  config.status-with-latex

	rm -fr $(cl_src)

	-$(MAKE) distclean

	for k in sub guess; do \
	    if test -e config.$$k.upstream; then \
	        mv -f config.$$k.upstream config.$$k; \
	    fi; \
	done

	for i in tex2xindy/tex2xindy.1 \
	  $(patsubst %,user-commands/%.1, texindy xindy); do \
	    if [ -e $$i.upstream ]; then \
	        mv $$i.upstream $$i; \
	    fi; \
	done

	-$(MAKE) -f debian/rules unpatch

	dh_clean

binary-indep: build-indep
	dh_testdir
	dh_testroot
	dh_clean -k -i
	dh_installdirs -i

#       docdir is /usr/share/doc/xindy-rules instead of â€¦/doc/xindy-VERSION
	for i in $(indep_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy-rules \
	      docdir='$$(datadir)/doc/xindy-rules' || exit 1; \
	done
	find debian/xindy-rules/usr/share/xindy/lang -name \*.pl -delete

	dh_installchangelogs -i NEWS
	dh_installdocs -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build-arch
	dh_testdir
	dh_testroot
	dh_clean -k -a
	dh_installdirs -a

	for i in $(arch_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy || exit 1; \
	done

	dh_link -a usr/share/doc/xindy-rules usr/share/doc/xindy
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

get-orig-source:
	wget -O xindy_2.2~beta2.orig.tar.gz \
	    http://dev.atmarama.org/xindy-2.2-beta2.tar.gz

.PHONY: build build-arch build-indep clean binary-indep binary-arch binary get-orig-source
