#!/usr/bin/make -f
# -*- makefile -*-

include /usr/share/dpatch/dpatch.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS += -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

export CLISP_DIR = $(shell dirname $$(readlink --canonicalize /usr/bin/clisp-link))
export CLISP_LINKKIT = $(CLISP_DIR)/linkkit

arch_subdirs=rte binaries tex2xindy user-commands
indep_subdirs=modules make-rules doc

pre-config-stamp: configure patch-stamp
	dh_testdir
	for i in . rte/ordrules; do \
	    for k in sub guess; do \
	        test -r /usr/share/misc/config.$$k || continue; \
	        if ! test -L $$i/config.$$k; then \
	            mv $$i/config.$$k $$i/config.$$k.upstream; \
	            ln -s /usr/share/misc/config.$$k $$i/config.$$k; \
	        fi; \
	    done \
	done

# Upstream did not disable the maintainer mode in aclocal.m4. Because the time
# stamps in the archive are set in an adversarial way, all Makefiles, configure
# and the like get rebuild upon build. If you have a newer version of autotools
# installed all makefiles are rebuild and my dpatches are lost.
	find -name aclocal.m4 -print0 | xargs -0 touch --date="now-4sec"
	find -name Makefile.in -print0 | xargs -0 touch --date="now-2sec"
	find -name configure -print0 | xargs -0 touch

	touch $@

config.status: pre-config-stamp
	./configure LDFLAGS="$(LDFLAGS) -Wl,-z,defs" --host=$(DEB_HOST_GNU_TYPE) \
	    --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man \
	    --infodir=\$${prefix}/share/info --disable-make-rules --disable-docs

config.status-with-latex: pre-config-stamp
	if [ -e config.status ]; then \
	    rm -f build-arch-stamp build-indep-stamp; \
	    $(MAKE) distclean || true; \
	fi
	./configure LDFLAGS="$(LDFLAGS) -Wl,-z,defs" --host=$(DEB_HOST_GNU_TYPE) \
	    --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man \
	    --infodir=\$${prefix}/share/info

	ln config.status config.status-with-latex

#build: build-indep build-arch
build:

build-indep: build-indep-stamp
build-indep-stamp: config.status-with-latex
	dh_testdir

	for i in $(indep_subdirs); do $(MAKE) -C $$i all || exit 1; done

	# Rebuild the manual pages to fix the hyphen vs. dash problem
	mv tex2xindy/tex2xindy.1 tex2xindy/tex2xindy.1.upstream
	pod2man tex2xindy/tex2xindy.l > tex2xindy/tex2xindy.1
	for i in texindy xindy.in; do \
	    man_file=user-commands/$${i%.in}.1; \
	    mv $$man_file $$man_file.upstream; \
	    pod2man user-commands/$$i > $$man_file; \
	done

	touch $@

build-arch: build-arch-stamp
build-arch-stamp:  config.status
	dh_testdir

	for i in $(arch_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

clean:
	dh_testdir
	rm -f build-arch-stamp build-indep-stamp pre-config-stamp \
	  config.status-with-latex

	-$(MAKE) distclean

	for i in . rte/ordrules; do \
	    for k in sub guess; do \
	        if test -e $$i/config.$$k.upstream; then \
	            mv -f $$i/config.$$k.upstream $$i/config.$$k; \
	        fi; \
	    done \
	done

	for i in tex2xindy/tex2xindy.1 \
	  $(patsubst %,user-commands/%.1, texindy xindy); do \
	    if [ -e $$i.upstream ]; then \
	        mv $$i.upstream $$i; \
	    fi; \
	done

	-$(MAKE) -f debian/rules unpatch

	dh_clean

binary-indep: build-indep
	dh_testdir
	dh_testroot
	dh_clean -k -i
	dh_installdirs -i

#       docdir is /usr/share/doc/xindy-rules instead of â€¦/doc/xindy-VERSION
	for i in $(indep_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy-rules \
	      docdir='$$(datadir)/doc/xindy-rules' || exit 1; \
	done
	find debian/xindy-rules/usr/share/xindy/lang -name \*.pl -delete

	dh_installchangelogs -i ChangeLog
	dh_installdocs -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build-arch
	dh_testdir
	dh_testroot
	dh_clean -k -a
	dh_installdirs -a

	for i in $(arch_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy || exit 1; \
	done

	dh_link -a usr/share/doc/xindy-rules usr/share/doc/xindy
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

get-orig-source:
	wget -O xindy_2.2~beta2.orig.tar.gz \
	    http://dev.atmarama.org/xindy-2.2-beta2.tar.gz

.PHONY: build build-arch build-indep clean binary-indep binary-arch binary get-orig-source
