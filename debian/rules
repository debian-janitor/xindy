#!/usr/bin/make -f
# -*- makefile -*-

include /usr/share/dpatch/dpatch.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS += -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

export CLISP_DIR = $(shell dirname $$(readlink --canonicalize /usr/bin/clisp-link))
export CLISP_LINKKIT = $(CLISP_DIR)/linkkit

configure_flags = LDFLAGS="$(LDFLAGS) -Wl,-z,defs" CFLAGS="$(CFLAGS)" \
  --host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr \
  --mandir=\$${prefix}/share/man --infodir=\$${prefix}/share/info \
  --enable-external-clisp --enable-clisp-dir=$(CLISP_DIR)

arch_subdirs=rte binaries tex2xindy user-commands
indep_subdirs=modules make-rules doc

config.status: configure patch-stamp
	dh_testdir
	./configure $(configure_flags) --disable-make-rules --disable-docs

config.status-with-latex: configure patch-stamp
	dh_testdir
	if [ -e config.status ]; then \
	    rm -f build-arch-stamp build-indep-stamp; \
	    $(MAKE) distclean || true; \
	fi
	./configure $(configure_flags)

	ln config.status config.status-with-latex

#build: build-indep build-arch
build:

build-indep: build-indep-stamp
build-indep-stamp: config.status-with-latex
	dh_testdir

	for i in $(indep_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

cl_src = $(CURDIR)/clisp-link-src

build-arch: build-arch-stamp
build-arch-stamp:  config.status
	dh_testdir

	rm -fr $(cl_src)
	cp -Lr $(CLISP_DIR)/full $(cl_src)
	sed -i '/^LIBS/!n; s/-ldb /-ldb-4.6 /; s/-l\(SM\|ICE\) //g' \
	  $(cl_src)/makevars
	$(MAKE) -C rte fulldir=$(cl_src) all

	for i in $(arch_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

clean:
	dh_testdir
	rm -f build-arch-stamp build-indep-stamp config.status-with-latex

	rm -fr $(cl_src)

	# fixme upstream: clisp-link creates this directory, but upstream
        # doesn't remove it
	rm -fr rte/dynmod

	if [ -f Makefile ]; then $(MAKE) distclean; fi

	$(MAKE) -f debian/rules unpatch

	dh_clean

binary-indep: build-indep
	dh_testdir
	dh_testroot
	dh_clean -k -i
	dh_installdirs -i

#       docdir is /usr/share/doc/xindy-rules instead of â€¦/doc/xindy-VERSION
	for i in $(indep_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy-rules \
	      docdir='$$(datadir)/doc/xindy-rules' || exit 1; \
	done
	find debian/xindy-rules/usr/share/xindy/lang -name \*.pl -delete

	dh_installchangelogs -i NEWS
	dh_installdocs -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build-arch
	dh_testdir
	dh_testroot
	dh_clean -k -a
	dh_installdirs -a

	for i in $(arch_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy || exit 1; \
	done

	dh_link -a usr/share/doc/xindy-rules usr/share/doc/xindy
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

get-orig-source:
	wget -O xindy_2.3.orig.tar.gz \
	  http://surfnet.dl.sourceforge.net/sourceforge/xindy/xindy-2.3.tar.gz

test:
	dh_testdir
	set -e; for i in debian/tests/*; do $i; done

.PHONY: build build-arch build-indep clean binary-indep binary-arch binary \
  get-orig-source test
