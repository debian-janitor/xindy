#!/usr/bin/make -f
# -*- makefile -*-

include /usr/share/dpatch/dpatch.make

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# upstream did not disable the maintainer mode of its makefile. If you have
# a newer version of autotools installed all makefiles are rebuild and my
# dpatches are lost. This variables pevent the rebuild of makefiles.
export ACLOCAL=/bin/true
export AMTAR=/bin/true
export AUTOCONF=/bin/true
export AUTOHEADER=/bin/true
export AUTOMAKE=/bin/true
export MAKEINFO=/bin/true

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CFLAGS += -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

export CLISP_DIR = /usr/lib/clisp
export CLISP_LINKKIT = $(CLISP_DIR)/linkkit

arch_subdirs=rte binaries tex2xindy user-commands
indep_subdirs=modules make-rules doc

config.status: configure patch-stamp
	dh_testdir
	for i in . rte/ordrules; do \
	    for k in sub guess; do \
	        test -r /usr/share/misc/config.$$k || continue; \
	        if ! test -L $$i/config.$$k; then \
	            mv $$i/config.$$k $$i/config.$$k.upstream; \
	            ln -s /usr/share/misc/config.$$k $$i/config.$$k; \
	        fi; \
	    done \
	done

	./configure LDFLAGS="$(LDFLAGS) -Wl,-z,defs" --host=$(DEB_HOST_GNU_TYPE) \
	    --build=$(DEB_BUILD_GNU_TYPE) --prefix=/usr --mandir=\$${prefix}/share/man \
	    --infodir=\$${prefix}/share/info

build:

build-indep: build-indep-stamp
build-indep-stamp: config.status
	dh_testdir

	for i in $(indep_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

build-arch: build-arch-stamp
build-arch-stamp:  config.status
	dh_testdir

	for i in $(arch_subdirs); do $(MAKE) -C $$i all || exit 1; done

	touch $@

clean:
	dh_testdir
	rm -f build-arch-stamp build-indep-stamp

	-$(MAKE) distclean

	for i in . rte/ordrules; do \
	    for k in sub guess; do \
	        if test -e $$i/config.$$k.upstream; then \
	            mv -f $$i/config.$$k.upstream $$i/config.$$k; \
	        fi; \
	    done \
	done

	-$(MAKE) -f debian/rules unpatch

	dh_clean

binary-indep: build-indep
	dh_testdir
	dh_testroot
	dh_clean -k -i
	dh_installdirs -i

#       docdir is /usr/share/doc/xindy-rules instead of â€¦/doc/xindy-VERSION
	for i in $(indep_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy-rules \
	      docdir='$$(datadir)/doc/xindy-rules' || exit 1; \
	done
	find debian/xindy-rules/usr/share/xindy/lang -name \*.pl -delete

	dh_installchangelogs -i ChangeLog
	dh_installdocs -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build-arch
	dh_testdir
	dh_testroot
	dh_clean -k -a
	dh_installdirs -a

	for i in $(arch_subdirs); do \
	    $(MAKE) -C $$i install DESTDIR=$(CURDIR)/debian/xindy || exit 1; \
	done

	dh_link -a usr/share/doc/xindy-rules usr/share/doc/xindy
	dh_strip -a
	dh_compress -a
	dh_fixperms -a
	dh_perl -a
	dh_makeshlibs -a
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch

get-orig-source:
	wget http://dev.atmarama.org/xindy-2.2-beta2.tar.gz
	mv xindy-2.2-beta2.tar.gz xindy_2.2~beta2.orig.tar.gz

.PHONY: build build-arch build-indep clean binary-indep binary-arch binary get-orig-source
